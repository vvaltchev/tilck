#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

FBDOOM_VER="0.12.1"

function download_fbdoom {

   if ! [ -f $TC/cache/fbdoom.tgz ]; then

      local fbdoom="https://github.com/maximevince/fbDOOM.git"
      local fd_url="https://github.com/freedoom/freedoom/releases/download"
      local ver="$FBDOOM_VER"
      local freedoom="freedoom-$ver"
      local freedoom_zip="$freedoom.zip"

      if ! git clone --depth 1 "$fbdoom"; then
         echo "ERROR: unable to clone $fbdoom"
         rm -rf fbDOOM
         exit 1
      fi

      pushd fbDOOM || exit 1

      if ! [ -d fbdoom ]; then
         echo "ERROR: the directory `pwd`/fbdoom does not exist!"
         exit 1
      fi

      pushd fbdoom

      if ! [ -f m_config.c ]; then
         echo "ERROR: cannot file m_config.c"
         exit 1
      fi

      if grep 'homedir = "/mnt"' m_config.c; then
         sed -i 's/homedir = "\/mnt";/homedir = "\/tmp";/g' m_config.c
      else
         echo "WARNING: unable to find the homedir hack in m_config.c"
      fi

      if ! [ -f config.h ]; then
         echo "ERROR: cannot file config.h"
         exit 1
      fi

      if ! grep FILES_DIR config.h &> /dev/null; then
         echo "ERROR: cannot file the FILES_DIR define in config.h!"
         exit 1
      fi

      sed -E -i 's/FILES_DIR .+/FILES_DIR "\/tmp"/g' config.h
      popd

      wget $fd_url/v$ver/$freedoom_zip

      if ! [ -f $freedoom_zip ]; then
         echo "ERROR: unable to download $fd_url/v$ver/$freedoom_zip"
         rm -rf fbDOOM
         exit 1
      fi

      unzip $freedoom_zip || exit 1
      mv $freedoom freedoom || exit 1
      rm $freedoom_zip

      pushd freedoom

      if ! [ -f freedoom1.wad ]; then
         echo "ERROR: unable to find the freedoom1.wad file"
         exit 1
      fi

      gzip freedoom1.wad
      popd
      popd

      tar cfz fbdoom.tgz fbDOOM || exit 1
      mv fbdoom.tgz $TC/cache
   fi

   extract_cachefile_tar_gz fbdoom.tgz --
}

all_funcs_list+=(build_fbdoom)
function build_fbdoom {

   pushd $ARCH

   if ! [ -d fbDOOM ]; then

      show_work_on_component_msg "FBDOOM"
      reset_cc_vars

      download_fbdoom
      cd fbDOOM

      if [[ "$HOST_ARCH" == "$ARCH" ]]; then

         # Note: NOT TESTED yet.
         # Remember: this scenario (building on $ARCH) is _not_ officially
         # supported.

         export SYS_CC="$CC"
         export SYS_CXX="$CXX"
         export CC_POST_FLAGS="-specs $MUSL_INSTALL/lib/musl-gcc.specs"

      else
         # Default case
         set_cc_vars_to_tc
      fi

      export CROSS_COMPILE="${ARCH_GCC_TC}-linux-"
      export LDFLAGS="-static"

      pushd fbdoom
      run_command2 "make NOSDL=1 -j$BUILD_PAR" build.log
      ${ARCH_GCC_TC}-linux-strip --strip-all fbdoom
      gzip fbdoom
      popd

      export LDFLAGS=""
      export CROSS_COMPILE=""

   else
      show_skip_component_msg "FBDOOM"
   fi

   popd
}

function build_fbdoom_installed_status {
   if [ -d $TC/$ARCH/fbDOOM/ ]; then
      if [ -f $TC/$ARCH/fbDOOM/fbdoom/fbdoom.gz ]; then
         echo "installed $ARCH"
      else
         echo "error"
      fi
   fi
}
