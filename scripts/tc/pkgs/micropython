#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

MICROPYTHON_VER="1.13-tilck"

function download_micropython {

   local ver="$MICROPYTHON_VER"
   local tarname="micropython-$ver.tgz"
   local url="https://github.com/vvaltchev/micropython.git"

   download_git_repo_in_cache "$url" v$ver $tarname micropython
   extract_cachefile_tar_gz $tarname --
}

if [[ $HOST_ARCH == "i386" ]] || [[ $HOST_ARCH == "x86_64" ]]; then
   if [[ "$ARCH" == "i386" ]] || [[ "$ARCH" == "riscv64" ]]; then
      all_funcs_list+=(build_micropython)
   fi
fi

function build_micropython {

   if [[ $HOST_ARCH != "i386" ]] && [[ $HOST_ARCH != "x86_64" ]]; then
      echo "ERROR: HOST_ARCH=$HOST_ARCH not supported"
      return
   fi

   pushd $ARCH

   if ! [ -d micropython ]; then

      show_work_on_component_msg "MICROPYTHON"
      reset_cc_vars

      download_micropython
      cd micropython

      if [[ "$USE_SYSCC" == 1 ]]; then
         echo "ERROR: micropython doesn't support USE_SYSCC=1 at the moment"
         exit 1
      fi

      export LDFLAGS_EXTRA="-static"
      local opts="V=1 MICROPY_PY_FFI=0 MICROPY_PY_THREAD=0"

      set +e
      pushd mpy-cross
      run_command2 "make $opts -j$BUILD_PAR" build_1.log
      dump_cross_compiler_env "build_1.log"
      popd

      set_cc_vars_to_tc
      export CROSS_COMPILE="${ARCH_GCC_TC}-linux-"

      pushd ports/unix
      run_command2 "make submodules" make_submodules.log
      run_command2 "make $opts -j$BUILD_PAR" build_2.log
      dump_cross_compiler_env "build_2.log"

      if ! [ -f $TC/$ARCH/micropython/ports/unix/micropython ]; then
         echo "ERROR: build failed !!!" >> build_2.log
         exit 1
      fi
      popd
      set -e

      export LDFLAGS_EXTRA=""
      export CROSS_COMPILE=""

   else
      show_skip_component_msg "MICROPYTHON"
   fi

   popd
}

function build_micropython_installed_status {

   local arch_list=""

   for x in $ALL_ARCH_LIST; do
      if [ -d $TC/$x/micropython ]; then
         if [ -f $TC/$x/micropython/ports/unix/micropython ]; then
            arch_list="${arch_list}$x "
         else
            echo "error"
            return
         fi
      fi
   done

   # Drop the trailing " "
   if [[ "${arch_list: -1}" == " " ]]; then
      arch_list="${arch_list:: -1}"
   fi

   if [ -n "$arch_list" ]; then
      echo "installed $arch_list"
   fi
}
