#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

OVMF_VER="latest"

# $1: omvf_arch
function download_ovmf_internal {

   local ovmf_arch="$1"
   local url="https://www.kraxel.org/repos/jenkins/edk2/"

   # Unfortunately, the OVMF builds on kraxel.org are in the RPM format.
   # Therefore, we need to make sure that rpm2cpio is installed.
   install_rpm2cpio

   wget -nd -r --no-parent -A "edk2.git-ovmf-${ovmf_arch}*" "$url"
   rpm2cpio edk2.git-ovmf-${ovmf_arch}* | cpio -idmv

   mv ./usr/share/edk2.git/* .
   rm -rf ./usr
   rm -rf ./robots*
   rm -rf *.rpm

   mv ovmf-${ovmf_arch} ovmf
}

# $1: omvf_arch
# $2: arch (our convention)
function check_and_download_ovmf {

   pushd $2

   if ! [ -d ovmf ]; then
      show_work_on_component_msg "OVMF (arch: $2)"
      download_ovmf_internal $1
   else
      show_skip_component_msg "(arch: $2)"
   fi

   popd
}

all_funcs_list+=(download_ovmf)
function download_ovmf {
   check_and_download_ovmf ia32 i386
   check_and_download_ovmf x64 x86_64
}

function download_ovmf_installed_status {

   local arch_list=""

   for x in i386 x86_64; do

      if [ -d $TC/$x/ovmf ]; then
         if ! [ -f $TC/$x/ovmf/OVMF-pure-efi.fd ]; then
            echo "error"
            return
         fi
         arch_list="${arch_list}$x "
      fi

   done

   # Drop the trailing " "
   if [[ "${arch_list: -1}" == " " ]]; then
      arch_list="${arch_list:: -1}"
   fi

   if [ -n "$arch_list" ]; then
      echo "installed $arch_list"
   fi
}
