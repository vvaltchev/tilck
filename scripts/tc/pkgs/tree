#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

TREE_CMD_VER="1.8.0"

function download_tree_cmd {

   local ver="$TREE_CMD_VER"
   local tarname="tree_cmd-$ver.tgz"
   local url="https://github.com/vvaltchev/tree-command.git"

   download_git_repo_in_cache "$url" tilck $tarname tree_cmd
   extract_cachefile_tar_gz $tarname --
}

all_funcs_list+=(build_tree_cmd)
function build_tree_cmd {

   pushd $ARCH

   if ! [ -d tree_cmd ]; then

      show_work_on_component_msg "TREE (command)"
      reset_cc_vars

      download_tree_cmd
      cd tree_cmd

      if [[ "$HOST_ARCH" == "$ARCH" ]]; then

         # Remember: this scenario (building on $ARCH) is _not_ officially
         # supported.

         export SYS_CC="$CC"
         export SYS_CXX="$CXX"
         export CC_POST_FLAGS="-specs $MUSL_INSTALL/lib/musl-gcc.specs"

         export CC="$MAIN_DIR/scripts/build_scripts/${ARCH}-gcc"
         export CXX="$MAIN_DIR/scripts/build_scripts/${ARCH}-g++"

      else

         # Default case
         set_cc_vars_to_tc
      fi

      run_command2 "make" build.log

   else
      show_skip_component_msg "TREE (command)"
   fi

   reset_cc_vars
   popd
}

function build_tree_cmd_installed_status {
   if [ -d $TC/$ARCH/tree_cmd ]; then
      if [ -f $TC/$ARCH/tree_cmd/tree ]; then
         echo "installed $ARCH"
      else
         echo "error"
      fi
   fi
}
