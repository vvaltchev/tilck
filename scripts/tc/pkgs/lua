#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

LUA_VER="5.4.1"

function download_lua {
   local version="$LUA_VER"
   local filename="lua"
   local tarname="lua-$version.tar.gz"
   local url="https://www.lua.org/ftp/"

   download_file_in_cache "$url" "$tarname" lua
   extract_cachefile_tar_gz "$tarname" "lua-$version" "lua"
}

all_funcs_list+=(build_lua)
function build_lua {

   pushd $ARCH
   reset_cc_vars

   show_work_on_component_msg "LUA"

   if ! [ -d "lua" ]; then

      download_lua
      cd lua

      if [[ "$HOST_ARCH" == "$ARCH" ]]; then

         # Remember: this scenario (building on $ARCH) is _not_ officially
         # supported.

         export SYS_CC="$CC"
         export SYS_CXX="$CXX"
         export CC_POST_FLAGS="-specs $MUSL_INSTALL/lib/musl-gcc.specs"

         export CC="$MAIN_DIR/scripts/build_scripts/${ARCH}-gcc"
         export CXX="$MAIN_DIR/scripts/build_scripts/${ARCH}-g++"

      else
         set_cc_vars_to_tc
      fi

      # Patch Lua's Makefile to remove "-Wl,-E"
      sed -i 's/-Wl,-E//g' src/Makefile

      # Build the lua and luac static binaries
      echo "Building lua..."
      local flags=""
      flags="CC=\"$CC\" MYCFLAGS=\"-std=gnu99\""
      flags="$flags AR=\"$AR rcu\" RANLIB=\"$RANLIB\""
      flags="$flags MYLDFLAGS=\"-static\""
      run_command2 "make $flags" build.log

      echo "Lua built successfully"

   else
      show_skip_component_msg "LUA"
   fi

   reset_cc_vars
   popd
}

function build_lua_installed_status {
   if [ -d $TC/$ARCH/lua ]; then
      if [ -f $TC/$ARCH/lua/src/lua ]; then
         echo "installed $ARCH"
      else
         echo "error"
      fi
   fi
}
