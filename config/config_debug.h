/* SPDX-License-Identifier: BSD-2-Clause */

/*
 * This is a TEMPLATE. The actual config file is generated by CMake and stored
 * in <BUILD_DIR>/tilck_gen_headers/.
 */

#pragma once
#include <tilck_gen_headers/config_kernel.h>

/* --------- Boolean config variables --------- */

/* enabled by default */
#cmakedefine01 KRN_TRACK_NESTED_INTERR
#cmakedefine01 PANIC_SHOW_STACKTRACE
#cmakedefine01 KERNEL_SELFTESTS
#cmakedefine01 KERNEL_STACK_ISOLATION
#cmakedefine01 KERNEL_SYMBOLS

/* disabled by default */
#cmakedefine01 PANIC_SHOW_REGS


/*
 * --------------------------------------------------------------------------
 *                  Hard-coded global & derived constants
 * --------------------------------------------------------------------------
 *
 * Here below there are many dervied constants and convenience constants like
 * COMPILER_NAME along with some pseudo-constants like USERMODE_VADDR_END not
 * designed to be easily changed because of the code makes assumptions about
 * them. Because of that, those constants are hard-coded and not available as
 * CMake variables. With time, some of those constants get "promoted" and moved
 * in CMake, others remain here. See the comments and think about the potential
 * implications before promoting a hard-coded constant to a configurable CMake
 * variable.
 */

/* Special advanced developer-only debug utils */
#define KMUTEX_STATS_ENABLED                    0
#define SLOW_DEBUG_REF_COUNT                    0

/* ------------------------------- */

#if !KERNEL_GCOV

   #if ARCH_BITS == 32
      #define SYMTAB_MAX_SIZE         (  96 * KB)
   #else
      #define SYMTAB_MAX_SIZE         ( 128 * KB)
   #endif

   #define STRTAB_MAX_SIZE            (  96 * KB)
#else
   #define SYMTAB_MAX_SIZE            ( 256 * KB)
   #define STRTAB_MAX_SIZE            ( 256 * KB)
#endif


/*
 * QEMU-specific debug constants. For the moment, keep those defines always
 * defined. Unless qemu is run with:
 *
 *    -device isa-debug-exit,iobase=0xf4,iosize=0x04
 *
 * debug_qemu_turn_off_machine() won't turn off the VM. Also it's worth
 * remarking debug_qemu_turn_off_machine() does *nothing* if we're running on
 * real HW (because it checks x86_cpu_features.ecx1.hypervisor).
 */

#define DEBUG_QEMU_EXIT_ON_INIT_EXIT   1
#define DEBUG_QEMU_EXIT_ON_PANIC       1
